'solc --version' running
'solc ./arithmatic-smart-contract-testcases\IO27.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,C:\Users\lsandula\Downloads\slither\arithmatic-smart-contract-testcases' running
Traceback (most recent call last):
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\Scripts\slither.exe\__main__.py", line 7, in <module>
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\__main__.py", line 107, in process_all
    ) = process_single(compilation, args, detector_classes, printer_classes)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\__main__.py", line 87, in process_single
    return _process(slither, detector_classes, printer_classes)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\__main__.py", line 137, in _process
    detector_resultss = slither.run_detectors()
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\slither.py", line 292, in run_detectors
    results = [d.detect() for d in self._detectors]
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\slither.py", line 292, in <listcomp>
    results = [d.detect() for d in self._detectors]
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\detectors\abstract_detector.py", line 203, in detect
    for r in [output.data for output in self._detect()]:
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\detectors\arithmatic\integer_overflow_underflow.py", line 58, in _detect
    not_safe = self.is_not_safe(contract, function, node)
  File "C:\Users\lsandula\AppData\Local\Programs\Python\Python310\lib\site-packages\slither\detectors\arithmatic\integer_overflow_underflow.py", line 456, in is_not_safe
    if len(node.irs) < 2 and isinstance(node.irs[0], Assignment):
IndexError: list index out of range
